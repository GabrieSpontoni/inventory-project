{"version":3,"sources":["app/shared/Spinner.js","firebase/authContext/auth.js","app/PrivateRoute.js","app/AppRoutes.js","app/components/shared/navbar/Profile.js","app/shared/Navbar.js","app/shared/Sidebar.js","app/shared/Footer.js","app/App.js","serviceWorker.js","index.js","firebase/config.js"],"names":["Spinner","className","Component","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","firebase","auth","onAuthStateChanged","user","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","to","Dashboard","lazy","DashboardPhotos","Output","Return","ReturnEdit","ReturnPhotos","ProductsList","NewProduct","NewConstructions","ConstructionsList","ConstructionsEdit","ReleaseAccess","NewBranch","ProductsListPhotos","ProductsEdit","Login","Register1","AppRoutes","fallback","exact","path","Profile","setUser","isMounted","dbRef","database","ref","child","uid","get","then","snapshot","exists","val","console","log","catch","error","Dropdown","alignRight","as","Toggle","nome","tipo_atual","Menu","Divider","Item","href","onClick","evt","preventDefault","signOut","Navbar","document","querySelector","classList","toggle","style","color","textDecoration","type","body","this","toggleOffcanvas","Sidebar","state","_isMounted","onRouteChanged","querySelectorAll","forEach","el","addEventListener","contains","add","remove","setState","username","callback","menuState","Object","keys","length","i","prevProps","props","location","obj","isPathActive","id","registerMenuOpen","toggleMenuState","data-toggle","Collapse","in","managementMenuOpen","developmentMenuOpen","pathname","startsWith","withRouter","Footer","target","rel","App","navbarComponent","isFullPageLayout","sidebarComponent","footerComponent","window","scrollTo","fullPageLayoutRoutes","Boolean","hostname","match","ReactDOM","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId"],"mappings":"kPAceA,G,OAZf,4JACE,WACE,OACE,6BACE,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,gBALzB,GAA6BC,c,gBCChBC,EAAcC,IAAMC,gBAEpBC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,EAAsCC,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KASA,OAPAC,qBAAU,WACRC,IAASC,OAAOC,oBAAmB,SAACC,GAClCP,EAAeO,GACfL,GAAW,QAEZ,IAECD,EACK,kDAIP,kBAACR,EAAYe,SAAb,CACEC,MAAO,CACLV,gBAGDF,I,wBCNQa,EAhBM,SAAC,GAA4C,IAA/BC,EAA8B,EAAzCC,UAA8BC,EAAW,iBACvDd,EAAgBe,qBAAWrB,GAA3BM,YACR,OACE,kBAAC,IAAD,iBACMc,EADN,CAEEE,OAAQ,SAACC,GAAD,OACJjB,EACA,kBAACY,EAAmBK,GAEpB,kBAAC,IAAD,CAAUC,GAAI,6BCNlBC,EAAYC,gBAAK,kBAAM,wDACvBC,EAAkBD,gBAAK,kBAAM,+DAE7BE,EAASF,gBAAK,kBAAM,4EACpBG,EAASH,gBAAK,kBAAM,wDACpBI,EAAaJ,gBAAK,kBAAM,6EACxBK,EAAeL,gBAAK,kBAAM,6EAE1BM,EAAeN,gBAAK,kBAAM,6EAC1BO,EAAaP,gBAAK,kBAAM,4EACxBQ,EAAmBR,gBAAK,kBAAM,6EAC9BS,EAAoBT,gBAAK,kBAAM,+DAC/BU,EAAoBV,gBAAK,kBAAM,6EAC/BW,EAAgBX,gBAAK,kBAAM,+DAC3BY,EAAYZ,gBAAK,kBAAM,sEACvBa,EAAqBb,gBAAK,kBAC9B,6EAEIc,EAAed,gBAAK,kBAAM,6EAE1Be,EAAQf,gBAAK,kBAAM,6EACnBgB,EAAYhB,gBAAK,kBAAM,sEA0EdiB,E,4JAvEb,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAcC,OAAK,EAACC,KAAK,aAAa3B,UAAWM,IACjD,kBAAC,EAAD,CACEqB,KAAK,sCACL3B,UAAWQ,IAGb,kBAAC,EAAD,CAAcmB,KAAK,kBAAkB3B,UAAWS,IAChD,kBAAC,EAAD,CAAckB,KAAK,kBAAkB3B,UAAWU,IAChD,kBAAC,EAAD,CACEiB,KAAK,iCACL3B,UAAWW,IAEb,kBAAC,EAAD,CACEgB,KAAK,mCACL3B,UAAWY,IAEb,kBAAC,EAAD,CACEe,KAAK,4BACL3B,UAAWa,IAEb,kBAAC,EAAD,CACEc,KAAK,0BACL3B,UAAWc,IAEb,kBAAC,EAAD,CACEa,KAAK,gCACL3B,UAAWe,IAEb,kBAAC,EAAD,CACEY,KAAK,iCACL3B,UAAWgB,IAGb,kBAAC,EAAD,CACEW,KAAK,sDACL3B,UAAWiB,IAEb,kBAAC,EAAD,CACEU,KAAK,0BACL3B,UAAWmB,IAEb,kBAAC,EAAD,CACEQ,KAAK,6BACL3B,UAAWkB,IAGb,kBAAC,EAAD,CACES,KAAK,2CACL3B,UAAWoB,IAEb,kBAAC,EAAD,CACEO,KAAK,yCACL3B,UAAWqB,IAGb,kBAAC,IAAD,CAAOM,KAAK,sBAAsB3B,UAAWsB,IAC7C,kBAAC,IAAD,CAAOK,KAAK,yBAAyB3B,UAAWuB,IAEhD,kBAAC,IAAD,CAAUlB,GAAG,sB,GAhEDzB,a,iBCzBjB,SAASgD,IACd,MAAwB1C,mBAAS,IAAjC,mBAAOS,EAAP,KAAakC,EAAb,KAEAtC,qBAAU,WACR,IAAIuC,GAAY,EACVC,EAAQvC,IAASwC,WAAWC,MA0BlC,OAxBAzC,IAASC,OAAOC,oBAAmB,SAACC,GAC9BA,EACFoC,EACGG,MADH,mBACqBvC,EAAKwC,MACvBC,MACAC,MAAK,SAACC,GACDR,IACEQ,EAASC,SACXV,EAAQ,eAAKS,EAASE,SAGtBC,QAAQC,IAAI,qBACZb,EAAQ,SAIbc,OAAM,SAACC,GACNH,QAAQG,MAAMA,MAGlBH,QAAQC,IAAI,cAIT,WACLZ,GAAY,KAEb,IAWH,OACE,wBAAInD,UAAU,+BACZ,kBAACkE,EAAA,EAAD,CAAUC,YAAU,EAACC,GAAG,KAAKpE,UAAU,YACrC,kBAACkE,EAAA,EAASG,OAAV,CAAiBD,GAAG,IAAIpE,UAAU,oCAChC,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,8CACX,8BACGgB,EAAKsD,KACN,kCAAQtD,EAAKuD,WAAb,OAGJ,uBAAGvE,UAAU,0CAIjB,kBAACkE,EAAA,EAASM,KAAV,CAAexE,UAAU,6DACvB,wBAAIA,UAAU,YACZ,0CAEF,kBAACkE,EAAA,EAASO,QAAV,MACA,kBAACP,EAAA,EAASQ,KAAV,CACEC,KAAK,KACLC,QAAS,SAACC,GAAD,OAASA,EAAIC,kBACtB9E,UAAU,gBAEV,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,uCACb,uBAAGA,UAAU,oCAGjB,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,wBACX,6CAIN,kBAACkE,EAAA,EAASO,QAAV,MACA,kBAACP,EAAA,EAASQ,KAAV,CACEC,KAAK,KACLC,QAAS,kBA/CjB/D,IACGC,OACAiE,UACArB,MAAK,eACLM,OAAM,SAACC,OACH,kBAAC,IAAD,CAAUvC,GAAI,yBA2Cb1B,UAAU,gBAEV,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,uCACb,uBAAGA,UAAU,iCAGjB,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,wBACX,4CAIN,kBAACkE,EAAA,EAASO,QAAV,MACA,uBAAGzE,UAAU,wBACX,uD,IChDGgF,E,qKAlDb,WACEC,SAASC,cAAc,sBAAsBC,UAAUC,OAAO,Y,gCAEhE,WACEH,SAASC,cAAc,kBAAkBC,UAAUC,OAAO,U,oBAG5D,WACE,OACE,yBAAKpF,UAAU,wCACb,yBAAKA,UAAU,mFACb,kBAAC,IAAD,CAAMA,UAAU,+BAA+B0B,GAAG,cAChD,wBAAI2D,MAAO,CAAEC,MAAO,QAASC,eAAgB,SAA7C,OAGJ,yBAAKvF,UAAU,4DACb,4BACEA,UAAU,mCACVwF,KAAK,SACLZ,QAAS,kBAAMK,SAASQ,KAAKN,UAAUC,OAAO,uBAE9C,0BAAMpF,UAAU,kBAElB,wBAAIA,UAAU,oBACZ,wBAAIA,UAAU,oBAWhB,kBAACiD,EAAD,MAEA,4BACEjD,UAAU,kEACVwF,KAAK,SACLZ,QAASc,KAAKC,iBAEd,0BAAM3F,UAAU,uC,GA3CPC,a,iBCDf2F,E,4MACJC,MAAQ,G,EACR7E,KAAO,G,uDAEP,WAAqB,IAAD,OAClB0E,KAAKI,YAAa,EAClBJ,KAAKK,iBAEL,IAAMN,EAAOR,SAASC,cAAc,QACpCD,SAASe,iBAAiB,sBAAsBC,SAAQ,SAACC,GACvDA,EAAGC,iBAAiB,aAAa,WAC3BV,EAAKN,UAAUiB,SAAS,sBAC1BF,EAAGf,UAAUkB,IAAI,iBAGrBH,EAAGC,iBAAiB,YAAY,WAC1BV,EAAKN,UAAUiB,SAAS,sBAC1BF,EAAGf,UAAUmB,OAAO,oBAI1B,IAAMlD,EAAQvC,IAASwC,WAAWC,MAElCzC,IAASC,OAAOC,oBAAmB,SAACC,GAC9BA,EACFoC,EACGG,MADH,mBACqBvC,EAAKwC,MACvBC,MACAC,MAAK,SAACC,GACDA,EAASC,UACX,EAAK2C,SAAS,CACZC,SAAU7C,EAASE,MAAMS,KACzBC,WAAYZ,EAASE,MAAMU,aAG7B,EAAKvD,KAAO,CACVwF,SAAU7C,EAASE,MAAMS,KACzBC,WAAYZ,EAASE,MAAMU,aAG7BT,QAAQC,IAAI,wBAGfC,OAAM,SAACC,GACNH,QAAQG,MAAMA,MAGlBH,QAAQC,IAAI,gB,kCAKlB,WAEE2B,KAAKa,SAAW,SAACV,EAAOY,O,6BAK1B,SAAgBC,GAAY,IAAD,OACrBhB,KAAKG,MAAMa,GACbhB,KAAKa,SAAL,eAAiBG,GAAY,KACe,IAAnCC,OAAOC,KAAKlB,KAAKG,OAAOgB,QAGjCF,OAAOC,KAAKlB,KAAKG,OAAOI,SAAQ,SAACa,GAC/B,EAAKP,SAAL,eAAiBO,GAAI,OAHvBpB,KAAKa,SAAL,eAAiBG,GAAY,KAO/BhB,KAAKa,SAAS,CACZC,SAAUd,KAAK1E,KAAKwF,SACpBjC,WAAYmB,KAAK1E,KAAKuD,e,gCAI1B,SAAmBwC,GACbrB,KAAKsB,MAAMC,WAAaF,EAAUE,UACpCvB,KAAKK,mB,4BAIT,WAAkB,IAAD,OACfd,SAASC,cAAc,YAAYC,UAAUmB,OAAO,UACpDK,OAAOC,KAAKlB,KAAKG,OAAOI,SAAQ,SAACa,GAC/B,EAAKP,SAAL,eAAiBO,GAAI,OAGD,CACpB,CAAE9D,KAAM,QAAS6C,MAAO,gBACxB,CAAE7C,KAAM,WAAY6C,MAAO,oBAC3B,CAAE7C,KAAM,cAAe6C,MAAO,sBAC9B,CAAE7C,KAAM,eAAgB6C,MAAO,uBAC/B,CAAE7C,KAAM,UAAW6C,MAAO,kBAC1B,CAAE7C,KAAM,SAAU6C,MAAO,iBACzB,CAAE7C,KAAM,UAAW6C,MAAO,kBAC1B,CAAE7C,KAAM,eAAgB6C,MAAO,uBAGnBI,SAAQ,SAACiB,GACjB,EAAKC,aAAaD,EAAIlE,OACxB,EAAKuD,SAAL,eAAiBW,EAAIrB,OAAQ,OAGjCH,KAAKa,SAAS,CACZC,SAAUd,KAAK1E,KAAKwF,SACpBjC,WAAYmB,KAAK1E,KAAKuD,e,oBAI1B,WAAU,IAAD,OACP,OACE,yBAAKvE,UAAU,4BAA4BoH,GAAG,WAC5C,yBAAKpH,UAAU,8FACb,uBACEA,UAAU,2BACV2E,KAAK,aACLU,MAAO,CAAEC,MAAO,QAASC,eAAgB,SAEzC,0CAGJ,wBAAIvF,UAAU,OACZ,wBAAIA,UAAU,yBACZ,0BAAMA,UAAU,YACd,0CAGJ,wBACEA,UACE0F,KAAKyB,aAAa,cACd,6BACA,uBAGN,kBAAC,IAAD,CAAMnH,UAAU,WAAW0B,GAAG,cAC5B,0BAAM1B,UAAU,aACd,uBAAGA,UAAU,yBAEf,0BAAMA,UAAU,cACd,6CAIN,wBACEA,UACE0F,KAAKyB,aAAa,cACd,6BACA,uBAGN,yBACEnH,UACE0F,KAAKG,MAAMwB,iBACP,yBACA,WAENzC,QAAS,kBAAM,EAAK0C,gBAAgB,qBACpCC,cAAY,YAEZ,0BAAMvH,UAAU,aACd,uBAAGA,UAAU,2BAEf,0BAAMA,UAAU,cACd,6CAEF,uBAAGA,UAAU,gBAEf,kBAACwH,EAAA,EAAD,CAAUC,GAAI/B,KAAKG,MAAMwB,kBACvB,6BACE,wBAAIrH,UAAU,4BACZ,wBAAIA,UAAU,YACX,IACD,kBAAC,IAAD,CACEA,UACE0F,KAAKyB,aAAa,mBACd,kBACA,WAENzF,GAAG,mBAEH,2CAEF,kBAAC,IAAD,CACE1B,UACE0F,KAAKyB,aAAa,mBACd,kBACA,WAENzF,GAAG,mBAEH,wDAQgB,kBAA1BgE,KAAKG,MAAMtB,YACe,YAA1BmB,KAAKG,MAAMtB,YACe,QAA1BmB,KAAKG,MAAMtB,aACX,6BACE,wBAAIvE,UAAU,yBACZ,0BAAMA,UAAU,YACd,gDAIJ,wBACEA,UACE0F,KAAKyB,aAAa,eACd,6BACA,uBAGN,yBACEnH,UACE0F,KAAKG,MAAM6B,mBACP,yBACA,WAEN9C,QAAS,kBAAM,EAAK0C,gBAAgB,uBACpCC,cAAY,YAEZ,0BAAMvH,UAAU,aACd,uBAAGA,UAAU,yBAEf,0BAAMA,UAAU,cACd,qDAEF,uBAAGA,UAAU,gBAEf,kBAACwH,EAAA,EAAD,CAAUC,GAAI/B,KAAKG,MAAM6B,oBACvB,6BACE,wBAAI1H,UAAU,4BACZ,wBAAIA,UAAU,YACX,IACD,kBAAC,IAAD,CACEA,UACE0F,KAAKyB,aAAa,6BACd,kBACA,WAENzF,GAAG,6BAEH,kDAGJ,wBAAI1B,UAAU,YACZ,kBAAC,IAAD,CACEA,UACE0F,KAAKyB,aAAa,2BACd,kBACA,WAENzF,GAAG,2BAEH,+CAGJ,wBAAI1B,UAAU,YACZ,kBAAC,IAAD,CACEA,UACE0F,KAAKyB,aAAa,kCACd,kBACA,WAENzF,GAAG,kCAEH,+CAIJ,wBAAI1B,UAAU,YACZ,kBAAC,IAAD,CACEA,UACE0F,KAAKyB,aAAa,iCACd,kBACA,WAENzF,GAAG,iCAEH,4CAIJ,wBAAI1B,UAAU,YACX,IACD,kBAAC,IAAD,CACEA,UACE0F,KAAKyB,aAAa,8BACd,kBACA,WAENzF,GAAG,8BAEH,uDASW,QAA1BgE,KAAKG,MAAMtB,YACV,6BACE,wBAAIvE,UAAU,yBACZ,0BAAMA,UAAU,YACd,sCAIJ,wBACEA,UACE0F,KAAKyB,aAAa,gBACd,6BACA,uBAGN,yBACEnH,UACE0F,KAAKG,MAAM8B,oBACP,yBACA,WAEN/C,QAAS,kBAAM,EAAK0C,gBAAgB,wBACpCC,cAAY,YAEZ,0BAAMvH,UAAU,aACd,uBAAGA,UAAU,mBAEf,0BAAMA,UAAU,cACd,0CAEF,uBAAGA,UAAU,gBAEf,kBAACwH,EAAA,EAAD,CAAUC,GAAI/B,KAAKG,MAAM8B,qBACvB,6BACE,wBAAI3H,UAAU,4BACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CACEA,UACE0F,KAAKyB,aAAa,2BACd,kBACA,WAENzF,GAAG,2BAEH,uD,0BAcxB,SAAasB,GACX,OAAO0C,KAAKsB,MAAMC,SAASW,SAASC,WAAW7E,O,GA7W7B/C,aAiXP6H,cAAWlC,GC5VXmC,E,4JAvBb,WACE,OACE,4BAAQ/H,UAAU,UAChB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,0EACb,0BAAMA,UAAU,iEAAhB,iBACc,IACZ,uBACE2E,KAAK,iCACLqD,OAAO,SACPC,IAAI,uBAHN,gBAKgB,KAPlB,e,GANShI,aCWfiI,G,uOACJrC,MAAQ,G,uDAER,WACEH,KAAKK,mB,oBAGP,WACE,IAAIoC,EAAmBzC,KAAKG,MAAMuC,iBAAgC,GAAb,kBAAC,EAAD,MACjDC,EAAoB3C,KAAKG,MAAMuC,iBAAiC,GAAd,kBAAC,EAAD,MAClDE,EAAmB5C,KAAKG,MAAMuC,iBAAgC,GAAb,kBAAC,EAAD,MAErD,OACE,yBAAKpI,UAAU,sBACZqI,EACD,yBAAKrI,UAAU,qCACZmI,EACD,yBAAKnI,UAAU,cACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,OAEDsI,O,gCAOX,SAAmBvB,GACbrB,KAAKsB,MAAMC,WAAaF,EAAUE,UACpCvB,KAAKK,mB,4BAIT,WAGE,IAAMN,EAAOR,SAASC,cAAc,QACC,sBAAjCQ,KAAKsB,MAAMC,SAASW,SACtBnC,EAAKN,UAAUkB,IAAI,OAEnBZ,EAAKN,UAAUmB,OAAO,OAExBiC,OAAOC,SAAS,EAAG,GAWnB,IAVA,IAAMC,EAAuB,CAC3B,sBACA,sBACA,yBACA,yBACA,yBACA,yBACA,yBACA,+BAEO3B,EAAI,EAAGA,EAAI2B,EAAqB5B,OAAQC,IAAK,CACpD,GAAIpB,KAAKsB,MAAMC,SAASW,WAAaa,EAAqB3B,GAAI,CAC5DpB,KAAKa,SAAS,CACZ6B,kBAAkB,IAEpBnD,SACGC,cAAc,sBACdC,UAAUkB,IAAI,qBACjB,MAEAX,KAAKa,SAAS,CACZ6B,kBAAkB,IAEpBnD,SACGC,cAAc,sBACdC,UAAUmB,OAAO,0B,GArEVrG,cA2EH6H,cAAWI,GC5ENQ,QACW,cAA7BH,OAAOtB,SAAS0B,UAEe,UAA7BJ,OAAOtB,SAAS0B,UAEhBJ,OAAOtB,SAAS0B,SAASC,MACvB,2DCZNC,IAASrH,OACP,kBAAC,IAAD,CAAesH,SAAS,KACtB,kBAAC,EAAD,OAEF7D,SAAS8D,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxF,MAAK,SAAAyF,GACjCA,EAAaC,iB,gCEnInB,MAamBvI,EAASwI,cAXL,CACrBC,OAAQC,0CACRC,WAAYD,wCACZE,YAAaF,6DACbG,UAAWH,wBACXI,cAAeJ,oCACfK,kBAAmBL,eACnBM,MAAON,4CACPO,cAAeP,kB","file":"static/js/main.98cd70ab.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class Spinner extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"spinner-wrapper\">\n          <div className=\"donut\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Spinner\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase/app\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setPending(false);\n    });\n  }, []);\n\n  if (pending) {\n    return <>Loading...</>;\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../firebase/authContext/auth\";\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const { currentUser } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/user-pages/login-1\"} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { Component, Suspense, lazy } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Spinner from \"../app/shared/Spinner\";\nimport { AuthProvider } from \"../firebase/authContext/auth\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst Dashboard = lazy(() => import(\"./dashboard/Dashboard\"));\nconst DashboardPhotos = lazy(() => import(\"./dashboard/DashboardPhotos\"));\n\nconst Output = lazy(() => import(\"./actions/Output\"));\nconst Return = lazy(() => import(\"./actions/Return\"));\nconst ReturnEdit = lazy(() => import(\"./actions/ReturnEdit\"));\nconst ReturnPhotos = lazy(() => import(\"./actions/ReturnPhotos\"));\n\nconst ProductsList = lazy(() => import(\"./management/ProductsList\"));\nconst NewProduct = lazy(() => import(\"./management/NewProduct\"));\nconst NewConstructions = lazy(() => import(\"./management/NewConstructions\"));\nconst ConstructionsList = lazy(() => import(\"./management/ConstructionsList\"));\nconst ConstructionsEdit = lazy(() => import(\"./management/ConstructionsEdit\"));\nconst ReleaseAccess = lazy(() => import(\"./management/ReleaseAccess\"));\nconst NewBranch = lazy(() => import(\"./dev/NewBranch\"));\nconst ProductsListPhotos = lazy(() =>\n  import(\"./management/ProductsListPhotos\")\n);\nconst ProductsEdit = lazy(() => import(\"./management/ProductsListEdit\"));\n\nconst Login = lazy(() => import(\"./user-pages/Login\"));\nconst Register1 = lazy(() => import(\"./user-pages/Register\"));\n\nclass AppRoutes extends Component {\n  render() {\n    return (\n      <AuthProvider>\n        <Suspense fallback={<Spinner />}>\n          <Switch>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute\n              path=\"/dashboard/dashboard-photos/:idProd\"\n              component={DashboardPhotos}\n            />\n\n            <PrivateRoute path=\"/actions/output\" component={Output} />\n            <PrivateRoute path=\"/actions/return\" component={Return} />\n            <PrivateRoute\n              path=\"/actions/return-form/:idAction\"\n              component={ReturnEdit}\n            />\n            <PrivateRoute\n              path=\"/actions/return-photos/:idAction\"\n              component={ReturnPhotos}\n            />\n            <PrivateRoute\n              path=\"/management/products-list\"\n              component={ProductsList}\n            />\n            <PrivateRoute\n              path=\"/management/new-product\"\n              component={NewProduct}\n            />\n            <PrivateRoute\n              path=\"/management/new-constructions\"\n              component={NewConstructions}\n            />\n            <PrivateRoute\n              path=\"/management/constructions-list\"\n              component={ConstructionsList}\n            />\n\n            <PrivateRoute\n              path=\"/management/constructions-list-edit/:idConstruction\"\n              component={ConstructionsEdit}\n            />\n            <PrivateRoute\n              path=\"/development/new-branch\"\n              component={NewBranch}\n            />\n            <PrivateRoute\n              path=\"/management/release-access\"\n              component={ReleaseAccess}\n            />\n\n            <PrivateRoute\n              path=\"/management/products-list-photos/:idProd\"\n              component={ProductsListPhotos}\n            />\n            <PrivateRoute\n              path=\"/management/products-list-edit/:idProd\"\n              component={ProductsEdit}\n            />\n\n            <Route path=\"/user-pages/login-1\" component={Login} />\n            <Route path=\"/user-pages/register-1\" component={Register1} />\n\n            <Redirect to=\"/dashboard\" />\n          </Switch>\n        </Suspense>\n      </AuthProvider>\n    );\n  }\n}\n\nexport default AppRoutes;\n","import React, { useEffect, useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport firebase from \"firebase/app\";\nimport { Redirect } from \"react-router-dom\";\n\nexport function Profile() {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    let isMounted = true;\n    const dbRef = firebase.database().ref();\n\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        dbRef\n          .child(`usuarios/${user.uid}`)\n          .get()\n          .then((snapshot) => {\n            if (isMounted) {\n              if (snapshot.exists()) {\n                setUser({ ...snapshot.val() });\n                // console.log(user);\n              } else {\n                console.log(\"No data available\");\n                setUser({});\n              }\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      } else {\n        console.log(\"no user\");\n      }\n    });\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const handleLogout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {})\n      .catch((error) => {});\n    return <Redirect to={\"/user-pages/login-1\"} />;\n  };\n\n  return (\n    <ul className=\"navbar-nav navbar-nav-right\">\n      <Dropdown alignRight as=\"li\" className=\"nav-item\">\n        <Dropdown.Toggle as=\"a\" className=\"nav-link cursor-pointer no-caret\">\n          <div className=\"navbar-profile\">\n            <p className=\"mb-0 d-none d-sm-block navbar-profile-name\">\n              <span>\n                {user.nome}\n                <code>({user.tipo_atual})</code>\n              </span>\n            </p>\n            <i className=\"mdi mdi-menu-down d-none d-sm-block\"></i>\n          </div>\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu className=\"navbar-dropdown preview-list navbar-profile-dropdown-menu\">\n          <h6 className=\"p-3 mb-0\">\n            <span>Profile</span>\n          </h6>\n          <Dropdown.Divider />\n          <Dropdown.Item\n            href=\"!#\"\n            onClick={(evt) => evt.preventDefault()}\n            className=\"preview-item\"\n          >\n            <div className=\"preview-thumbnail\">\n              <div className=\"preview-icon bg-dark rounded-circle\">\n                <i className=\"mdi mdi-settings text-success\"></i>\n              </div>\n            </div>\n            <div className=\"preview-item-content\">\n              <p className=\"preview-subject mb-1\">\n                <span>Settings</span>\n              </p>\n            </div>\n          </Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item\n            href=\"!#\"\n            onClick={() => handleLogout()}\n            className=\"preview-item\"\n          >\n            <div className=\"preview-thumbnail\">\n              <div className=\"preview-icon bg-dark rounded-circle\">\n                <i className=\"mdi mdi-logout text-danger\"></i>\n              </div>\n            </div>\n            <div className=\"preview-item-content\">\n              <p className=\"preview-subject mb-1\">\n                <span>Log Out</span>\n              </p>\n            </div>\n          </Dropdown.Item>\n          <Dropdown.Divider />\n          <p className=\"p-3 mb-0 text-center\">\n            <span>Advanced settings</span>\n          </p>\n        </Dropdown.Menu>\n      </Dropdown>\n    </ul>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { Profile } from \"../components/shared/navbar/Profile\";\n\nclass Navbar extends Component {\n  toggleOffcanvas() {\n    document.querySelector(\".sidebar-offcanvas\").classList.toggle(\"active\");\n  }\n  toggleRightSidebar() {\n    document.querySelector(\".right-sidebar\").classList.toggle(\"open\");\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar p-0 fixed-top d-flex flex-row\">\n        <div className=\"navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center\">\n          <Link className=\"navbar-brand brand-logo-mini\" to=\"/dashboard\">\n            <h2 style={{ color: \"white\", textDecoration: \"none\" }}>N</h2>\n          </Link>\n        </div>\n        <div className=\"navbar-menu-wrapper flex-grow d-flex align-items-stretch\">\n          <button\n            className=\"navbar-toggler align-self-center\"\n            type=\"button\"\n            onClick={() => document.body.classList.toggle(\"sidebar-icon-only\")}\n          >\n            <span className=\"mdi mdi-menu\"></span>\n          </button>\n          <ul className=\"navbar-nav w-100\">\n            <li className=\"nav-item w-100\">\n              {/* <form className=\"nav-link mt-2 mt-md-0 d-none d-lg-flex search\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Search products\"\n                />\n              </form> */}\n            </li>\n          </ul>\n\n          <Profile />\n\n          <button\n            className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\"\n            type=\"button\"\n            onClick={this.toggleOffcanvas}\n          >\n            <span className=\"mdi mdi-format-line-spacing\"></span>\n          </button>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Collapse } from \"react-bootstrap\";\nimport firebase from \"firebase/app\";\n\nclass Sidebar extends Component {\n  state = {};\n  user = {};\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.onRouteChanged();\n    // add class 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\n    const body = document.querySelector(\"body\");\n    document.querySelectorAll(\".sidebar .nav-item\").forEach((el) => {\n      el.addEventListener(\"mouseover\", function () {\n        if (body.classList.contains(\"sidebar-icon-only\")) {\n          el.classList.add(\"hover-open\");\n        }\n      });\n      el.addEventListener(\"mouseout\", function () {\n        if (body.classList.contains(\"sidebar-icon-only\")) {\n          el.classList.remove(\"hover-open\");\n        }\n      });\n    });\n    const dbRef = firebase.database().ref();\n\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        dbRef\n          .child(`usuarios/${user.uid}`)\n          .get()\n          .then((snapshot) => {\n            if (snapshot.exists()) {\n              this.setState({\n                username: snapshot.val().nome,\n                tipo_atual: snapshot.val().tipo_atual,\n              });\n\n              this.user = {\n                username: snapshot.val().nome,\n                tipo_atual: snapshot.val().tipo_atual,\n              };\n            } else {\n              console.log(\"No data available\");\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      } else {\n        console.log(\"no user\");\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n\n  toggleMenuState(menuState) {\n    if (this.state[menuState]) {\n      this.setState({ [menuState]: false });\n    } else if (Object.keys(this.state).length === 0) {\n      this.setState({ [menuState]: true });\n    } else {\n      Object.keys(this.state).forEach((i) => {\n        this.setState({ [i]: false });\n      });\n      this.setState({ [menuState]: true });\n    }\n    this.setState({\n      username: this.user.username,\n      tipo_atual: this.user.tipo_atual,\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged();\n    }\n  }\n\n  onRouteChanged() {\n    document.querySelector(\"#sidebar\").classList.remove(\"active\");\n    Object.keys(this.state).forEach((i) => {\n      this.setState({ [i]: false });\n    });\n\n    const dropdownPaths = [\n      { path: \"/apps\", state: \"appsMenuOpen\" },\n      { path: \"/actions\", state: \"registerMenuOpen\" },\n      { path: \"/management\", state: \"managementMenuOpen\" },\n      { path: \"/development\", state: \"developmentMenuOpen\" },\n      { path: \"/tables\", state: \"tablesMenuOpen\" },\n      { path: \"/icons\", state: \"iconsMenuOpen\" },\n      { path: \"/charts\", state: \"chartsMenuOpen\" },\n      { path: \"/error-pages\", state: \"errorPagesMenuOpen\" },\n    ];\n\n    dropdownPaths.forEach((obj) => {\n      if (this.isPathActive(obj.path)) {\n        this.setState({ [obj.state]: true });\n      }\n    });\n    this.setState({\n      username: this.user.username,\n      tipo_atual: this.user.tipo_atual,\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n        <div className=\"sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top\">\n          <a\n            className=\"sidebar-brand brand-logo\"\n            href=\"/dashboard\"\n            style={{ color: \"white\", textDecoration: \"none\" }}\n          >\n            <h2>Nexsolar</h2>\n          </a>\n        </div>\n        <ul className=\"nav\">\n          <li className=\"nav-item nav-category\">\n            <span className=\"nav-link\">\n              <div>Estoque</div>\n            </span>\n          </li>\n          <li\n            className={\n              this.isPathActive(\"/dashboard\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-speedometer\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <div>Dashboard</div>\n              </span>\n            </Link>\n          </li>\n          <li\n            className={\n              this.isPathActive(\"/cadastros\")\n                ? \"nav-item menu-items active\"\n                : \"nav-item menu-items\"\n            }\n          >\n            <div\n              className={\n                this.state.registerMenuOpen\n                  ? \"nav-link menu-expanded\"\n                  : \"nav-link\"\n              }\n              onClick={() => this.toggleMenuState(\"registerMenuOpen\")}\n              data-toggle=\"collapse\"\n            >\n              <span className=\"menu-icon\">\n                <i className=\"mdi mdi-database-plus\"></i>\n              </span>\n              <span className=\"menu-title\">\n                <div>Ações</div>\n              </span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={this.state.registerMenuOpen}>\n              <div>\n                <ul className=\"nav flex-column sub-menu\">\n                  <li className=\"nav-item\">\n                    {\" \"}\n                    <Link\n                      className={\n                        this.isPathActive(\"/actions/output\")\n                          ? \"nav-link active\"\n                          : \"nav-link\"\n                      }\n                      to=\"/actions/output\"\n                    >\n                      <div>Retiradas</div>\n                    </Link>\n                    <Link\n                      className={\n                        this.isPathActive(\"/actions/return\")\n                          ? \"nav-link active\"\n                          : \"nav-link\"\n                      }\n                      to=\"/actions/return\"\n                    >\n                      <div>Devoluções</div>\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n            </Collapse>\n          </li>\n\n          {(this.state.tipo_atual === \"administrador\" ||\n            this.state.tipo_atual === \"diretor\" ||\n            this.state.tipo_atual === \"dev\") && (\n            <div>\n              <li className=\"nav-item nav-category\">\n                <span className=\"nav-link\">\n                  <div>Gerenciamento</div>\n                </span>\n              </li>\n\n              <li\n                className={\n                  this.isPathActive(\"/management\")\n                    ? \"nav-item menu-items active\"\n                    : \"nav-item menu-items\"\n                }\n              >\n                <div\n                  className={\n                    this.state.managementMenuOpen\n                      ? \"nav-link menu-expanded\"\n                      : \"nav-link\"\n                  }\n                  onClick={() => this.toggleMenuState(\"managementMenuOpen\")}\n                  data-toggle=\"collapse\"\n                >\n                  <span className=\"menu-icon\">\n                    <i className=\"mdi mdi-account-key\"></i>\n                  </span>\n                  <span className=\"menu-title\">\n                    <div>Administração</div>\n                  </span>\n                  <i className=\"menu-arrow\"></i>\n                </div>\n                <Collapse in={this.state.managementMenuOpen}>\n                  <div>\n                    <ul className=\"nav flex-column sub-menu\">\n                      <li className=\"nav-item\">\n                        {\" \"}\n                        <Link\n                          className={\n                            this.isPathActive(\"/management/products-list\")\n                              ? \"nav-link active\"\n                              : \"nav-link\"\n                          }\n                          to=\"/management/products-list\"\n                        >\n                          <div>Listar Produtos</div>\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link\n                          className={\n                            this.isPathActive(\"/management/new-product\")\n                              ? \"nav-link active\"\n                              : \"nav-link\"\n                          }\n                          to=\"/management/new-product\"\n                        >\n                          <div>Novo Produto</div>\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link\n                          className={\n                            this.isPathActive(\"/management/constructions-list\")\n                              ? \"nav-link active\"\n                              : \"nav-link\"\n                          }\n                          to=\"/management/constructions-list\"\n                        >\n                          <div>Listar Obras</div>\n                        </Link>\n                      </li>\n\n                      <li className=\"nav-item\">\n                        <Link\n                          className={\n                            this.isPathActive(\"/management/new-constructions\")\n                              ? \"nav-link active\"\n                              : \"nav-link\"\n                          }\n                          to=\"/management/new-constructions\"\n                        >\n                          <div>Nova Obra</div>\n                        </Link>\n                      </li>\n\n                      <li className=\"nav-item\">\n                        {\" \"}\n                        <Link\n                          className={\n                            this.isPathActive(\"/management/release-access\")\n                              ? \"nav-link active\"\n                              : \"nav-link\"\n                          }\n                          to=\"/management/release-access\"\n                        >\n                          <div>Liberar acessos</div>\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                </Collapse>\n              </li>\n            </div>\n          )}\n          {this.state.tipo_atual === \"dev\" && (\n            <div>\n              <li className=\"nav-item nav-category\">\n                <span className=\"nav-link\">\n                  <div>DEV</div>\n                </span>\n              </li>\n\n              <li\n                className={\n                  this.isPathActive(\"/development\")\n                    ? \"nav-item menu-items active\"\n                    : \"nav-item menu-items\"\n                }\n              >\n                <div\n                  className={\n                    this.state.developmentMenuOpen\n                      ? \"nav-link menu-expanded\"\n                      : \"nav-link\"\n                  }\n                  onClick={() => this.toggleMenuState(\"developmentMenuOpen\")}\n                  data-toggle=\"collapse\"\n                >\n                  <span className=\"menu-icon\">\n                    <i className=\"mdi mdi-alert\"></i>\n                  </span>\n                  <span className=\"menu-title\">\n                    <div>RESTRITO</div>\n                  </span>\n                  <i className=\"menu-arrow\"></i>\n                </div>\n                <Collapse in={this.state.developmentMenuOpen}>\n                  <div>\n                    <ul className=\"nav flex-column sub-menu\">\n                      <li className=\"nav-item\">\n                        <Link\n                          className={\n                            this.isPathActive(\"/development/new-branch\")\n                              ? \"nav-link active\"\n                              : \"nav-link\"\n                          }\n                          to=\"/development/new-branch\"\n                        >\n                          <div>NOVA FILIAL</div>\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                </Collapse>\n              </li>\n            </div>\n          )}\n        </ul>\n      </nav>\n    );\n  }\n\n  isPathActive(path) {\n    return this.props.location.pathname.startsWith(path);\n  }\n}\n\nexport default withRouter(Sidebar);\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <div className=\"container-fluid\">\n          <div className=\"d-sm-flex justify-content-center justify-content-sm-between py-2 w-100\">\n            <span className=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">\n              Copyright ©{\" \"}\n              <a\n                href=\"https://www.bootstrapdash.com/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                BootstrapDash{\" \"}\n              </a>\n              2021\n            </span>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./App.scss\";\nimport AppRoutes from \"./AppRoutes\";\nimport Navbar from \"./shared/Navbar\";\nimport Sidebar from \"./shared/Sidebar\";\nimport Footer from \"./shared/Footer\";\n\nimport \"../firebase/config\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.onRouteChanged();\n  }\n\n  render() {\n    let navbarComponent = !this.state.isFullPageLayout ? <Navbar /> : \"\";\n    let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar /> : \"\";\n    let footerComponent = !this.state.isFullPageLayout ? <Footer /> : \"\";\n\n    return (\n      <div className=\"container-scroller\">\n        {sidebarComponent}\n        <div className=\"container-fluid page-body-wrapper\">\n          {navbarComponent}\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <AppRoutes />\n            </div>\n            {footerComponent}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged();\n    }\n  }\n\n  onRouteChanged() {\n    // console.log(\"ROUTE CHANGED\");\n\n    const body = document.querySelector(\"body\");\n    if (this.props.location.pathname === \"/layout/RtlLayout\") {\n      body.classList.add(\"rtl\");\n    } else {\n      body.classList.remove(\"rtl\");\n    }\n    window.scrollTo(0, 0);\n    const fullPageLayoutRoutes = [\n      \"/user-pages/login-1\",\n      \"/user-pages/login-2\",\n      \"/user-pages/register-1\",\n      \"/user-pages/register-2\",\n      \"/user-pages/lockscreen\",\n      \"/error-pages/error-404\",\n      \"/error-pages/error-500\",\n      \"/general-pages/landing-page\",\n    ];\n    for (let i = 0; i < fullPageLayoutRoutes.length; i++) {\n      if (this.props.location.pathname === fullPageLayoutRoutes[i]) {\n        this.setState({\n          isFullPageLayout: true,\n        });\n        document\n          .querySelector(\".page-body-wrapper\")\n          .classList.add(\"full-page-wrapper\");\n        break;\n      } else {\n        this.setState({\n          isFullPageLayout: false,\n        });\n        document\n          .querySelector(\".page-body-wrapper\")\n          .classList.remove(\"full-page-wrapper\");\n      }\n    }\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import firebase from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_APIKEY_PROD,\n  authDomain: process.env.REACT_APP_APIKEY_AUTHDOMAIN_PROD,\n  databaseURL: process.env.REACT_APP_APIKEY_DATABASEURL_PROD,\n  projectId: process.env.REACT_APP_APIKEY_PROJECTID_PROD,\n  storageBucket: process.env.REACT_APP_APIKEY_STORAGEBUCKET_PROD,\n  messagingSenderId: process.env.REACT_APP_APIKEY_MESSAGINGSENDERID_PROD,\n  appId: process.env.REACT_APP_APIKEY_APPID_PROD,\n  measurementId: process.env.REACT_APP_APIKEY_MEASUREMENTID_PROD,\n};\n\nexport const app = firebase.initializeApp(firebaseConfig);\n"],"sourceRoot":""}